@model CareHomeMock.Models.MediaFileIndexVM

@{
    var title = "写真と動画の管理";
    ViewBag.Title = title;
}
@section scripts{
    <script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            $('#sortable').sortable().disableSelection();
            $('#SaveOrder').click(function () {
                var orderedIds = [];
                $('#sortable tr').each(function (n, element) {
                    var id = parseInt($(element).find('.MediaFileId').text());
                    orderedIds.push(id);
                });
                console.info(orderedIds);
                $.ajax({
                    cache: false,
                    type: 'POST',
                    url: '/MediaFile/SaveOrder',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        orderedIds: orderedIds
                    })
                }).done(function (data) {
                    console.info(data);
                    location.reload();
                });
            });
        });
    </script>
}



<h2>@title</h2>

<p>
    @Html.ActionLink("追加する", "Upload", new { careHomeId = Model.CareHomeId })
    <button type="button" id="SaveOrder" class="btn btn-default">並び順を保存する</button>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MediaFiles[0].Updated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaFiles[0].Order)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaFiles[0].Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaFiles[0].RowKey)/@Html.DisplayNameFor(m => m.MediaFiles[0].YoutubeUrl)
        </th>
        <th>@Html.DisplayNameFor(m => m.MediaFiles[0].Description)</th>
        <th></th>
    </tr>

    <tbody id="sortable">
        @foreach (var item in Model.MediaFiles)
        {
            <tr>
                <td>
                    <span class="MediaFileId">@Html.DisplayFor(m => item.MediaFileId)</span>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @if (item.Type == CareHomeMock.Models.MediaFile.MediaFileType.Image)
                    {
                        @Html.DisplayFor(modelItem => item.RowKey)
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.YoutubeUrl)
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>
                    @if (item.Type == CareHomeMock.Models.MediaFile.MediaFileType.Image)
                    {
                        @Html.ActionLink("表示", "Download", new { fileName = item.RowKey }, new { target = "_blank" });
                    }
                    else
                    {
                        <a href="@string.Format("https://youtube.com/watch?v={0}", item.YoutubeUrl)" target="_blank">表示</a>
                    } |
                    @Html.ActionLink("編集", "Upload", new { careHomeId = item.CareHomeId, mediaFileId = item.MediaFileId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.MediaFileId })
                </td>
            </tr>
        }
    </tbody>
</table>
