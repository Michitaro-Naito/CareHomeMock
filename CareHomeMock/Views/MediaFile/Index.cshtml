@model IEnumerable<CareHomeMock.Models.MediaFile>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("追加する", "Upload")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Updated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RowKey)/@Html.DisplayNameFor(m => m.YoutubeUrl)
        </th>
        <th>@Html.DisplayNameFor(m => m.Description)</th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Updated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Order)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @if (item.Type == CareHomeMock.Models.MediaFile.MediaFileType.Image)
            {
                @Html.DisplayFor(modelItem => item.RowKey)
            }else
            {
                @Html.DisplayFor(modelItem => item.YoutubeUrl)
            }
        </td>
        <td>@Html.DisplayFor(modelItem => item.Description)</td>
        <td>
            @if (item.Type == CareHomeMock.Models.MediaFile.MediaFileType.Image)
            {
                @Html.ActionLink("表示", "Download", new { fileName = item.RowKey }, new { target = "_blank" });
            }
            else
            {
                <a href="@string.Format("https://youtube.com/watch?v={0}", item.YoutubeUrl)" target="_blank">表示</a>
            } |
            @Html.ActionLink("編集", "Upload", new { careHomeId = item.CareHomeId, mediaFileId = item.MediaFileId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.MediaFileId })
        </td>
    </tr>
}

</table>
