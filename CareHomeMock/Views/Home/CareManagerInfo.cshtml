@model CareHomeMock.Models.CareManager
@{
    var title = Model.Name;
    ViewBag.Title = title;
    var isAdmin = User.IsInRole("Admin");
    var shortUrl = GetAbsoluteUrl(Url.RouteUrl("CareManagerInfoShort", new { id = Model.CareManagerId }));
}

@section scripts{
    <script src="~/Scripts/raty/jquery.raty.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/amcharts.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/radar.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/themes/patterns.js"></script>
    <script>
        AmCharts.makeChart("chartdiv",
            {
                "type": "radar",
                "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
                "categoryField": "country",
                "startDuration": 2,
                "fontSize": 13,
                "theme": "patterns",
                "graphs": [
                    {
                        "balloonText": "[[value]]点",
                        "bullet": "round",
                        "bulletSize": 9,
                        "id": "AmGraph-1",
                        "lineAlpha": 1,
                        "lineThickness": 2,
                        'lineColor': '#F00',
                        "valueField": "litres"
                    }
                ],
                "guides": [],
                "valueAxes": [
                    {
                        "axisTitleOffset": 20,
                        "gridType": "circles",
                        "id": "ValueAxis-1",
                        "minimum": 0,
                        'maximum': 5,
                        "axisAlpha": 0.54,
                        "dashLength": 3,
                        "gridAlpha": 0.51
                    }
                ],
                "allLabels": [],
                "balloon": {},
                "titles": [],
                "dataProvider": [
                    {
                        "country": "企画・立案力",
                        "litres": @Model.企画立案力
                    },
                    {
                        "country": "行動・実践力",
                        "litres": @Model.行動実践力
                    },
                    {
                        "country": "関係構築力",
                        "litres": @Model.関係構築力
                    },
                    {
                        "country": "指導管理力",
                        "litres": @Model.指導管理力
                    },
                    {
                        "country": "公平中立性",
                        "litres": @Model.公平中立力
                    },
                    {
                        "country": "医療の知識",
                        "litres": @Model.医療知識
                    },
                    {
                        "country": "介護の知識",
                        "litres": @Model.介護知識
                    }
                ]
            }
        );
    </script>
    <script>
        $(document).ready(function(){

            function AppModel(){
                var s = this;

                s.oldestRowKey = ko.observable(null);
                s.reviews = ko.observableArray([]);
                s.noMore = ko.observable(false);
                s.showDelete = ko.observable(false);

                s.ActivateRaty = function(){
                    $('.rating').raty({
                        score: function () {
                            return $(this).attr('data-score');
                        },
                        path: '/Scripts/raty/images',
                        readOnly: true,
                        hints: ['すすめない', 'あまりすすめない', 'どちらとも言えない', 'まあすすめる', 'すすめる']
                    });
                }

                s.GetMoreReviews = function(){
                    $.ajax({
                        cache: false,
                        type: 'POST',
                        url: '/Home/GetReviews',
                        data: {
                            id: @Model.CareManagerId,
                            afterThisRowKey: s.oldestRowKey()
                        }
                    }).done(function(data){
                        console.info(data);
                        if(data.reviews.length > 0){
                            var last = Enumerable.From(data.reviews).Last();
                            s.oldestRowKey(last.RowKey);
                            for(var n=0; n<data.reviews.length; n++){
                                s.reviews.push(data.reviews[n]);
                            }
                            s.ActivateRaty();
                        }else{
                            s.noMore(true);
                        }
                    });
                }

                s.Delete = function(partitionKey, rowKey){
                    location.href = '/Review/Delete?partitionKey=' + partitionKey + '&rowKey=' + rowKey;
                }
            }

            var model = new AppModel();
            ko.applyBindings(model);
            model.GetMoreReviews();
            @if (isAdmin)
            {
                <text>model.showDelete(true);</text>
            }
        });
    </script>
}

<h2>@title</h2>

<div class="row">
    <div class="col-md-6">
        <table class="table table-condensed">
            <tr>
                <td>所属</td>
                <td>@Html.ActionLink(Model.CareHome.Name, "CareHomeInfo_BasicInfo", new{ controller ="Home", code=Model.CareHome.CareHomeCode})</td>
            </tr>
            <tr>
                <td>評価得点</td>
                <td>
                    @if (Model.ShowReviews)
                    {
                        <span class="rating" data-score="@Model.Rating"></span>
                        <span class="rating-value">
                            <span>@string.Format("{0:F1}", Model.Rating) 点</span>/<span>@Model.ReviewsCount 件</span>
                        </span>
                    }
                    else
                    {
                        <span>非公表</span>
                    }
                </td>
            </tr>
            <tr>
                <td>性別</td>
                <td>@Model.Gender</td>
            </tr>
            <tr>
                <td>年齢</td>
                <td>@Model.Age 歳</td>
            </tr>
            <tr>
                <td>ケアマネ資格取得</td>
                <td>@Model.Licensed.ToJstYearString() 年</td>
            </tr>
            <tr>
                <td>保有資格</td>
                <td>
                    @foreach (var l in Model.CareManagerLicenses)
                    {
                        <div>@l.License.Name</div>
                    }
                </td>
            </tr>
            <tr>
                <td>現在担当人数</td>
                <td>@Model.CurrentPatients 名</td>
            </tr>
            <tr>
                <td>新規対応</td>
                <td>
                    @if (Model.AllowNewPatient)
                    {
                        <span>可</span>
                    }
                    else
                    {
                        <span>不可</span>
                    }
                </td>
            </tr>
            <tr>
                <td>ブログ、FBなど</td>
                <td>
                    @if (!string.IsNullOrEmpty(Model.BlogUrls))
                    {
                        var uri = new Uri("http://amlitek.com/");
                        foreach (var url in Model.BlogUrls.Split('\n'))
                        {
                            if (Uri.TryCreate(url, UriKind.Absolute, out uri) && (uri.Scheme == Uri.UriSchemeHttp || uri.Scheme == Uri.UriSchemeHttps))
                            {
                                <a href="@uri" target="_blank">@uri</a><br />
                            }
                            else
                            {
                                <span>@url</span><br />
                            }
                        }
                    }
                </td>
            </tr>
        </table>
    </div>

    <div class="col-md-6">
        <div>@MyHelper.MainImage(Model.MediaFileDataId, 293, 240, true)</div>
        <div>
            <p class="qrcode-description">ケータイ・スマホで見る</p>
            <!--@shortUrl-->
            @QRCode.Render(shortUrl)
        </div>
        <div>@Html.Partial("_InfoSocial", new CareHomeMock.Models.InfoSocialPartialVM { LikeUrl = shortUrl })</div>
    </div>
</div><!-- row -->

<h3 class="career">経歴</h3>
<p class="career">
    @if (!string.IsNullOrEmpty(Model.Career))
    {
        var rows = Model.Career.Split('\n');
        foreach (var row in rows)
        {
            <span>@row</span><br/>
        }
    }
</p>

<h3 class="message">メッセージ</h3>
<p class="message">
    @if (!string.IsNullOrEmpty(Model.Messages))
    {
        var rows = Model.Messages.Split('\n');
        foreach (var row in rows)
        {
            <span>@row</span><br/>
        }
    }
</p>

<h3>自己評価（コンピテンシー）</h3>
<div class="row">
    <div class="col-md-12">
        <div id="chartdiv" style="width: 100%; height: 240px; background-color: #FFFFFF;"></div>
    </div>
</div>

<h3>他者評価（利用者や関係者の評判）</h3>
<p>@Html.ActionLink("このケアマネを評価する", "PostReview", "Home", new { id = Model.CareManagerId }, new { @class = "btn btn-default" })</p>
@if (Model.ShowReviews)
{
    <div data-bind="foreach: reviews">
        <div class="review">
            <div class="head">
                <span data-bind="text: ReviewerType" class="reviewerType"></span>
                <span class="hash">ID:<span data-bind="text: IpAddress" class="hash"></span></span>
                <span data-bind="text: fmDateTime(Created)" class="datetime"></span>
            </div>
            <div class="body">
                <div data-bind="attr: { 'data-score': Rating }" class="rating"></div>
                <div data-bind="text: Comment"></div>
            </div>
            <div data-bind="visible: Reply != null" class="reply">
                <span data-bind="text: Reply"></span>
            </div>
            <div data-bind="visible: $root.showDelete">
                <button type="button" data-bind="click: function(){$root.Delete($data.PartitionKey, $data.RowKey)}" class="btn btn-warning">削除する</button>
            </div>
        </div>
    </div>
    <button type="button" data-bind="visible: !noMore(), click: GetMoreReviews" class="btn btn-default btn-block">さらに読み込む</button>
}
else
{
    <p>このケアマネの評価は公開されていません。</p>
}
