@model CareHomeMock.Models.CareHome
@{
    var title = Model.Name;
    ViewBag.Title = title;
    var shortUrl = GetAbsoluteUrl(Url.RouteUrl("CareHomeInfoShort", new { code = Model.CareHomeCode }));
}
@section scripts{
    <!-- amCharts javascript sources -->
    <script src="~/Scripts/raty/jquery.raty.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/amcharts.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/pie.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/radar.js"></script>
    <script type="text/javascript" src="http://cdn.amcharts.com/lib/3/themes/patterns.js"></script>

    <!-- Pie, 要介護度別内訳 -->
    <script type="text/javascript">
        AmCharts.makeChart("chartdiv",
            {
                "type": "pie",
                "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
                "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                "titleField": "country",
                "valueField": "litres",
                "fontSize": 12,
                "theme": "default",
                "allLabels": [],
                "balloon": {},
                "titles": [],
                "dataProvider": [
                    {
                        "country": '要介護5',
                        "litres": @Model.要介護5
                    },
                    {
                        "country": '要介護4',
                        "litres": @Model.要介護4
                    },
                    {
                        "country": '要介護3',
                        "litres": @Model.要介護3
                    },
                    {
                        "country": '要介護2',
                        "litres": @Model.要介護2
                    },
                    {
                        "country": '要介護1',
                        "litres": @Model.要介護1
                    },
                    {
                        "country": '要支援2',
                        "litres": @Model.要支援2
                    },
                    {
                        "country": '要支援1',
                        "litres": @Model.要支援1
                    },
                    {
                        "country": '自立',
                        "litres": @Model.自立
                    }
                ]
            }
        );
    </script>

    <!-- Radar, 第三者評価 -->
    <script type="text/javascript">
        AmCharts.makeChart("chartdiv-radar",
            {
                "type": "radar",
                "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
                "categoryField": "country",
                "startDuration": 2,
                "fontSize": 13,
                "theme": "patterns",
                "graphs": [
                    {
                        "balloonText": "[[value]]点",
                        "bullet": "round",
                        "bulletSize": 9,
                        "id": "AmGraph-1",
                        "lineAlpha": 1,
                        "lineThickness": 2,
                        'lineColor': '#F00',
                        "valueField": "litres"
                    }
                ],
                "guides": [],
                "valueAxes": [
                    {
                        "axisTitleOffset": 20,
                        "gridType": "circles",
                        "id": "ValueAxis-1",
                        "minimum": 0,
                        'maximum': 5,
                        "axisAlpha": 0.54,
                        "dashLength": 3,
                        "gridAlpha": 0.51
                    }
                ],
                "allLabels": [],
                "balloon": {},
                "titles": [],
                "dataProvider": [
                    {
                        "country": '利用者の権利擁護',
                        "litres": @Model.利用者の権利擁護
                    },
                    {
                        "country": 'サービスの質の確保',
                        "litres": @Model.サービスの質の確保
                    },
                    {
                        "country": '相談・苦情等への対応',
                        "litres": @Model.相談苦情等への対応
                    },
                    {
                        "country": '外部機関等との連携',
                        "litres": @Model.外部機関等との連携
                    },
                    {
                        "country": '事業運営・管理',
                        "litres": @Model.事業運営管理
                    },
                    {
                        "country": '安全・衛生管理等',
                        "litres": @Model.安全衛生管理等
                    },
                    {
                        "country": '従業者の研修等',
                        "litres": @Model.従業者の研修等
                    }
                ]
            }
        );
    </script>
    <script>
        $(document).ready(function(){
            $('.rating').raty({
                score: function () {
                    return $(this).attr('data-score');
                },
                path: '/Scripts/raty/images',
                readOnly: true,
                hints: ['すすめない', 'あまりすすめない', 'どちらとも言えない', 'まあすすめる', 'すすめる']
            });
        });
    </script>
}



<h2>@title</h2>
@Html.Partial("_CareHomeInfoMenu", Model)

<div class="row">
    <div class="col-md-6">
        <table class="table table-condensed">
            <tbody>
                <tr>
                    <td style="min-width:80px;">郵便番号</td>
                    <td>@Model.Zip</td>
                </tr>
                <tr>
                    <td>所在地</td>
                    <td>@Model.Area.PrefectureName @Model.Area.CityName @Model.Address</td>
                </tr>
                <tr>
                    <td>建物名</td>
                    <td>@Model.AddressBuilding</td>
                </tr>
                <tr>
                    <td>Tel</td>
                    <td>@Model.Tel</td>
                </tr>
                <tr>
                    <td>Fax</td>
                    <td>@Model.Fax</td>
                </tr>
                <tr>
                    <td>ホームページ</td>
                    <td>
                        <a href="@Model.WebsiteUrl" target="_blank">@Model.WebsiteUrl</a>
                    </td>
                </tr>
                <tr>
                    <td>開業日</td>
                    <td>@Model.Established.ToJstDateString()</td>
                </tr>
                <tr>
                    <td>法人区分</td>
                    <td>@(CareHomeMock.Helper.EnumHelper<CareHomeMock.Models.CompanyType>.GetDisplayName(Model.CompanyType.ToString()))</td>
                </tr>
                <tr>
                    <td>法人名称</td>
                    <td>@Model.CompanyName</td>
                </tr>
                <tr>
                    <td>施設管理者氏名</td>
                    <td>@Model.ChiefName</td>
                </tr>
                <tr>
                    <td>施設管理者職名</td>
                    <td>@Model.ChiefJobTitle</td>
                </tr>
                <tr>
                    <td>情報更新日</td>
                    <td>@Model.DataUpdated.ToJstDateString()</td>
                </tr>
                <tr>
                    <td>経験5年以上割合</td>
                    <td>@string.Format("{0:F1}%", 100 * Model.経験5年以上割合)</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <div>@MyHelper.MainImage(Model.MediaFileDataId, 293, 240, true)</div>
        <div>
            @Html.Partial("_InfoSocial", new CareHomeMock.Models.InfoSocialPartialVM() { LikeUrl = shortUrl })
        </div>
        @if (Model.User == null)
        {
            <p>@Html.ActionLink("この事業所の方ですか？ 登録してください！", "Send", new { controller = "Application", careHomeCode = Model.CareHomeCode })</p>
        }
        else
        {
            <!-- Owned by @Model.User.UserName -->
        }
    </div>
</div>

<h3 class="region">対応可能地域</h3>
<p class="region">
    @if (!string.IsNullOrEmpty(Model.Region))
    {
        var rows = Model.Region.Split('\n');
        foreach (var row in rows)
        {
            <p>@row</p>
        }
    }
</p>

<h3 class="traits">特徴・セールスポイント</h3>
<p class="traits">
    @if (!string.IsNullOrEmpty(Model.Traits))
    {
        var rows = Model.Traits.Split('\n');
        foreach (var row in rows)
        {
            <span>@row</span><br/>
        }
    }
</p>

<h3 class="message">メッセージ</h3>
<p class="message">
    @if (!string.IsNullOrEmpty(Model.Messages))
    {
        var rows = Model.Messages.Split('\n');
        foreach (var row in rows)
        {
            <span>@row</span><br/>
        }
    }
</p>

<h3>人員数</h3>
<table class="table table-condensed">
    <thead>
        <tr>
            <th></th>
            <th>在席人数</th>
            <th>常勤換算</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>介護支援専門員</th>
            <td>@Model.介護支援専門員在席人数</td>
            <td>@string.Format("{0:F1}", Model.介護支援専門員常勤換算)</td>
        </tr>
        <tr>
            <th>事務員</th>
            <td>@Model.事務員在席人数</td>
            <td>@string.Format("{0:F1}", Model.事務員常勤換算)</td>
        </tr>
        <tr>
            <th>その他</th>
            <td>@Model.その他在席人数</td>
            <td>@string.Format("{0:F1}", Model.その他常勤換算)</td>
        </tr>
        <tr>
            <th>全職員</th>
            <td>@Model.全職員在席人数</td>
            <td>@string.Format("{0:F1}", Model.全職員常勤換算)</td>
        </tr>
    </tbody>
</table>

<h3>利用者の要介護度別内訳</h3>
<div class="row">
    <div class="col-md-12">
        <div id="chartdiv" style="width: 100%; height: 200px; background-color: #FFFFFF;"></div>
    </div>
</div>

<h3>第三者評価</h3>
<div class="row">
    <div class="col-md-12">
        <div id="chartdiv-radar" style="width: 100%; height: 240px; background-color: #FFFFFF;"></div>
    </div>
</div>
